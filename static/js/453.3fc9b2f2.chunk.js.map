{"version":3,"file":"static/js/453.3fc9b2f2.chunk.js","mappings":"wPA8EA,EArEmB,WACf,OAAoCA,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACxC,GAA4BJ,EAAAA,EAAAA,UAAS,KAAM,eAApCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUT,GAAQ,EACtB,GAAG,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACbX,GAAVW,GACAH,EAAaP,GACRW,KAAKC,EACd,EAEGA,EAAqB,SAACC,GACrB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZjB,GAAc,SAACD,GAAU,wBAASA,IAAU,OAAKiB,GAAa,IAC9Dd,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BG,EAAeW,EACtB,EAqBSE,EAnBe,SAACC,GAClB,IAAMD,EAASC,EAAKC,KAAI,SAAAC,GACpB,OACI,eAAmBC,UAAU,eAAc,UACvC,UAAC,KAAI,CAACC,GAAE,+BAA0BF,EAAKG,IAAK,WACxC,gBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAON,UAAU,sBACrD,gBAAKA,UAAU,oBAAmB,SAAED,EAAKO,SACzC,gBAAKN,UAAU,qBAAoB,SAAED,EAAKQ,YAJzCR,EAAKG,GAQtB,IACA,OACI,eAAIF,UAAU,eAAc,SACvBJ,GAGb,CAEcY,CAAahC,GACrBiC,EAAevB,GAAQ,SAACwB,EAAA,EAAY,IAAK,KACzCC,EAAU1B,IAAYP,GAAiB,SAACkC,EAAA,EAAO,IAAK,KAE1D,OACI,iBAAKZ,UAAU,eAAc,UACpBS,EACAE,EACAf,GACL,mBACII,UAAU,mCACVa,SAAUnC,EACVoC,MAAO,CAAC,QAAWhC,EAAc,OAAS,SAC1CiC,QAAS,kBAAM1B,EAAUT,EAAO,EAAC,UACjC,gBAAKoB,UAAU,QAAO,2BAItC,EC1DA,EAbmB,WAClB,OACC,iCACC,UAACgB,EAAA,EAAM,YACN,iBAAMC,KAAK,cAAcC,QAAQ,kCACjC,+CAED,SAACC,EAAA,EAAS,KACV,SAAC,EAAU,MAGd,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './comicsList.scss';\n\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(10000);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n\tconst onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true\n        }\n\n        setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended)\n\t};\n\n    const renderComics = (data) => {\n        const items =  data.map(item => {\n            return (\n                <li key={item.id}  className=\"comics__item\">\n                    <Link to={`/MarvelPortal/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        );\n    }\n    \n    const items = renderComics(comicsList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name=\"description\" content=\"Page with list of our comics\" />\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","data","map","item","className","to","id","src","thumbnail","alt","title","price","renderComics","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}
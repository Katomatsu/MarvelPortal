{"version":3,"file":"static/js/303.ca4df206.chunk.js","mappings":"oQAiBA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAa,WACxB,gBAAKC,IAAKC,EAAUC,IAAI,cACxB,iBAAKH,UAAU,mBAAkB,oCACP,kBAAK,kBAG/B,gBAAKC,IAAKG,EAAcD,IAAI,oBAGxC,C,uJC8BME,EAAO,SAAH,GAAiB,IAAZC,EAAK,EAALA,MACJC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,YAAaC,EAAyCH,EAAzCG,MAAOC,EAAkCJ,EAAlCI,UAAWC,EAAuBL,EAAvBK,SAAUC,EAAaN,EAAbM,UAEvD,OACI,iBAAKZ,UAAU,eAAc,WACzB,gBAAKC,IAAKS,EAAWP,IAAKI,EAAOP,UAAU,uBAC3C,iBAAKA,UAAU,qBAAoB,WAC/B,eAAIA,UAAU,qBAAoB,SAAEO,KACpC,cAAGP,UAAU,sBAAqB,SAAEQ,KACpC,eAAGR,UAAU,sBAAqB,cAAGY,MACrC,cAAGZ,UAAU,sBAAqB,SAAEW,KACpC,gBAAKX,UAAU,sBAAqB,SAAES,QAE1C,SAAC,KAAI,CAACI,GAAG,uBAAuBb,UAAU,qBAAoB,2BAG1E,EAEA,EApDwB,WACpB,IAAOc,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCV,EAAK,KAAEW,EAAQ,KAEzB,GAA+CC,EAAAA,EAAAA,KAAxCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,YAE9BC,EAAAA,EAAAA,YAAU,WACZC,GACE,GAAG,CAACV,IAEP,IAAMU,EAAc,WACbF,IACAD,EAASP,GACJW,KAAKC,EACjB,EAESA,EAAgB,SAACpB,GACnBW,EAASX,EAChB,EAESqB,EAAeP,GAAQ,SAACQ,EAAA,EAAY,IAAK,KACzCC,EAAUV,GAAU,SAACW,EAAA,EAAO,IAAK,KACjCC,EAAYZ,GAAWC,IAAUd,EAAiC,MAAxB,SAACD,EAAI,CAACC,MAAOA,IAE7D,OACI,iCACI,SAAC0B,EAAA,EAAS,IACTL,EACAE,EACAE,IAGb,C","sources":["components/appBanner/AppBanner.js","components/pages/SingleComicPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams, Link } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n\tconst {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n\t\tupdateComic();\r\n    }, [comicId])\r\n\r\n\tconst updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n\t};\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n\t};\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null\r\n\r\n    return (\r\n        <>  \r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, price, thumbnail, language, pageCount} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">1{pageCount}</p>\r\n                <p className=\"single-comic__descr\">{language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/MarvelPortal/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"names":["className","src","avengers","alt","avengersLogo","View","comic","title","description","price","thumbnail","language","pageCount","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","AppBanner"],"sourceRoot":""}